<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demo.mapper.BookMapper">
	<resultMap type="com.demo.domain.BookVO" id="bookMap">
		<id property="book_id" column="book_id"/>
		<result property="book_id" column="book_id" />
		<result property="isbn" column="isbn" />
		<result property="title" column="title" />
		<result property="publisher" column="publisher" />
		<result property="thumbnail" column="thumbnail" />
		<result property="url" column="url" />
		<result property="userId" column="userid"/>
		<result property="member_id" column="member_id"/>
		<result property="datetime" column="datetime" />
		<result property="createdate" column="createdate" />
		<collection property="authors" resultMap="authorMap"></collection>
	</resultMap>
	<resultMap type="com.demo.domain.AuthorVO" id="authorMap">
		<result property="book_id" column="book_id"/>
		<result property="author" column="author"/>
	</resultMap>
	
	<!-- search sql -->
	<sql id="search">			
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'I'.toString()">
							book.isbn like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'A'.toString()">
							author.author like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<!-- select -->
	<select id="getThumbnails" resultType="com.demo.domain.BookVO">
		select thumbnail from tbl_book where userId = #{userId}
	</select>
	
	<select id="getListWithPaging" resultType="com.demo.domain.BookVO">
		<![CDATA[
			select
				book_id, isbn, title, publisher, thumbnail, url, datetime, createdate, userid
			from
				(
					select /*+INDEX_DESC(tbl_book pk_book)*/
					rownum rn, book_id, isbn, title, publisher, thumbnail, url, datetime, createdate, userid
					from tbl_book
					where rownum <= #{criteria.pageNum} * #{criteria.amount} and userid = #{userId}
				)
			where rn > (#{criteria.pageNum} - 1) * #{criteria.amount}
		]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from tbl_book
		where userid = #{userId}
	</select>
	
	<select id="getSearchListWithPaging" resultMap="bookMap">
		<![CDATA[
			select distinct
				book_id, isbn, title, publisher, thumbnail, url, datetime
			from
				(
					select
					rownum rn, book.book_id, book.isbn, title, publisher, thumbnail, url, datetime
					from tbl_book book left outer join tbl_book_author author
					on book.book_id = author.book_id
					where 
		]]>
			
			<include refid="search"></include>
		
		<![CDATA[ 
					rownum <= #{pageNum} * #{amount}
				)
			where rn > (#{pageNum} - 1) * #{amount}
			order by book_id desc
		]]>
	</select>
	
	<select id="getTotalSearchCount" resultType="int">
		select count(distinct book.isbn) 
		from tbl_book book left outer join tbl_book_author author
		on book.book_id = author.book_id
		where 
			<include refid="search"></include>
		book.book_id > 0
	</select>
	
	<select id="getOne" resultMap="bookMap">
		select book.book_id, book.isbn, title,  publisher, thumbnail, url, datetime, createdate, author  
		from tbl_book book inner join tbl_book_author author on book.book_id = author.book_id
		where book.book_id = #{book_id}
	</select>
	
	<select id="getBookByIsbn" resultType="com.demo.domain.BookVO">
		select book_id, isbn, title, publisher, thumbnail, url, datetime, createdate  
		from tbl_book
		where isbn = #{isbn}
	</select>
	
	<select id="getBookByIsbnUsingLike" resultType="com.demo.domain.BookVO">
		select book_id, isbn, userid
		from tbl_book 
		where isbn like #{isbn}||'%'
	</select>

	<!-- insert -->
	<insert id="insert">
		<selectKey keyProperty="book_id" order="BEFORE" resultType="long">
			select seq_book.nextval from dual
		</selectKey>
		insert into tbl_book (book_id, isbn, title,  publisher, thumbnail, url, datetime, member_id, userid)
		values (#{book_id}, #{isbn}, #{title}, #{publisher}, #{thumbnail}, #{url}, #{datetime}, #{member_id}, #{userId})
	</insert>
	
	<!-- delete -->
	<delete id="delete">
		delete from tbl_book where book_id = #{book_id}	
	</delete>
</mapper>
